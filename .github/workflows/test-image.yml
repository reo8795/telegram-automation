name: Alternative Fear Greed Test

on:
  workflow_dispatch:

jobs:
  test-alternative-images:
    runs-on: ubuntu-latest
    
    steps:
    - name: Test CNN API Data
      run: |
        echo "CNN API 데이터 테스트 시작"
        
        # CNN 공포탐욕지수 API에서 데이터 가져오기
        cnn_data=$(curl -s "https://production.dataviz.cnn.io/index/fearandgreed/graphdata")
        echo "CNN API 응답: $cnn_data"
        
        if [ ! -z "$cnn_data" ] && echo "$cnn_data" | grep -q "fear_and_greed"; then
          # 데이터 파싱
          fear_greed_score=$(echo "$cnn_data" | grep -o '"score":[0-9]*' | head -1 | cut -d':' -f2)
          fear_greed_rating=$(echo "$cnn_data" | grep -o '"rating":"[^"]*' | head -1 | cut -d'"' -f4)
          fear_greed_timestamp=$(echo "$cnn_data" | grep -o '"timestamp":"[^"]*' | head -1 | cut -d'"' -f4)
          
          if [ -z "$fear_greed_score" ]; then
            fear_greed_score="50"
            fear_greed_rating="Neutral"
          fi
          
          # 한글 변환
          case "$fear_greed_rating" in
            "Extreme Fear") korean_rating="극도의 공포" ;;
            "Fear") korean_rating="공포" ;;
            "Neutral") korean_rating="중립" ;;
            "Greed") korean_rating="탐욕" ;;
            "Extreme Greed") korean_rating="극도의 탐욕" ;;
            *) korean_rating="$fear_greed_rating" ;;
          esac
          
          # 이모지 선택
          if [ "$fear_greed_score" -le 24 ]; then
            emoji="😱"
          elif [ "$fear_greed_score" -le 49 ]; then
            emoji="😰"
          elif [ "$fear_greed_score" -le 74 ]; then
            emoji="🤑"
          else
            emoji="🤯"
          fi
          
          # 메시지 전송 (이미지 없이)
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=${emoji} CNN 미국 주식시장 공포탐욕지수

          현재 지수: ${fear_greed_score}/100
          상태: ${korean_rating}
          
          💡 지수 해석:
          0-24: 극도의 공포 😱 (매수 기회)
          25-49: 공포 😰 (신중한 매수)
          50-74: 탐욕 🤑 (신중한 매도)
          75-100: 극도의 탐욕 🤯 (매도 고려)
          
          📈 CNN 공포탐욕지수 7가지 지표:
          • 주식 가격 모멘텀
          • 주식 가격 강도
          • 주식 가격 폭
          • 풋/콜 옵션 비율
          • 시장 변동성 (VIX)
          • 안전자산 수요
          • 정크본드 수요
          
          📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
          📊 데이터: CNN Markets (API)
          
          ⚠️ 이미지는 접근 제한으로 텍스트로만 제공됩니다."
          
          echo "✅ CNN API 데이터 전송 성공"
        else
          echo "❌ CNN API 데이터 가져오기 실패"
        fi

    - name: Test MacroMicro Image
      run: |
        echo "MacroMicro 이미지 테스트 시작"
        sleep 3
        
        # MacroMicro 차트 이미지 시도 (여러 URL 테스트)
        macromicro_urls=(
          "https://en.macromicro.me/charts/data/50108.png"
          "https://macromicro.me/charts/50108/cnn-fear-and-greed.png"
          "https://en.macromicro.me/charts/50108.png"
        )
        
        for url in "${macromicro_urls[@]}"; do
          echo "MacroMicro URL 테스트: $url"
          
          response=$(curl -s -I "$url")
          if echo "$response" | grep -q "200 OK"; then
            echo "✅ $url 접근 가능"
            
            # 이미지 전송 시도
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendPhoto" \
              -F "chat_id=${{ secrets.CHAT_ID }}" \
              -F "photo=$url" \
              -F "caption=📊 MacroMicro CNN 공포탐욕지수

            🌐 대체 이미지 소스: MacroMicro
            
            💡 이것은 CNN 공포탐욕지수의 차트입니다.
            
            📈 7가지 지표를 종합한 미국 주식시장 심리 분석
            
            📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
            📊 이미지 제공: MacroMicro
            
            ✅ 대체 이미지 전송 성공!"
            
            echo "✅ MacroMicro 이미지 전송 성공"
            break
          else
            echo "❌ $url 접근 실패"
          fi
        done

    - name: Test Text-Only High Quality Format
      run: |
        echo "고품질 텍스트 형식 테스트 시작"
        sleep 3
        
        # 이미지 없이 고품질 텍스트 형태로 공포탐욕지수 표현
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📊 CNN 미국 주식시장 공포탐욕지수

        ╔═══════════════════════════╗
        ║     현재 시장 심리 분석      ║
        ╚═══════════════════════════╝
        
        🎯 현재 지수: [실시간 API 호출 필요]
        📈 시장 상태: [Fear/Neutral/Greed]
        
        ┌─────────────────────────────┐
        │  7가지 핵심 지표 분석        │
        └─────────────────────────────┘
        
        📊 1. 주식 가격 모멘텀
        📈 2. 주식 가격 강도
        📉 3. 주식 가격 폭
        ⚖️ 4. 풋/콜 옵션 비율
        📡 5. 시장 변동성 (VIX)
        🏛️ 6. 안전자산 수요
        💰 7. 정크본드 수요
        
        ┌─────────────────────────────┐
        │        투자 가이드          │
        └─────────────────────────────┘
        
        😱 0-24: 극도의 공포 → 매수 기회
        😰 25-49: 공포 → 신중한 매수
        🤑 50-74: 탐욕 → 신중한 매도
        🤯 75-100: 극도의 탐욕 → 매도 고려
        
        📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
        📊 데이터: CNN Markets
        🔗 원본: https://www.cnn.com/markets/fear-and-greed
        
        ⚡ 이미지 접근 제한으로 고품질 텍스트 형태로 제공"
        
        echo "✅ 고품질 텍스트 형식 전송 완료"

    - name: Test TradingView Fear Greed
      run: |
        echo "TradingView 대체 방법 테스트"
        sleep 3
        
        # TradingView 위젯 링크로 대체
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📊 미국 주식시장 공포탐욕지수 (대체 방법)

        🔗 실시간 차트 확인:
        
        📈 TradingView 시장 심리:
        https://www.tradingview.com/markets/stocks-usa/market-movers-overview/
        
        📊 CNN 공포탐욕지수:
        https://www.cnn.com/markets/fear-and-greed
        
        📉 VIX 변동성 지수:
        https://finance.yahoo.com/quote/%5EVIX
        
        💹 S&P 500 모멘텀:
        https://finance.yahoo.com/quote/%5EGSPC
        
        ┌─────────────────────────────┐
        │    실시간 시장 지표 모음     │
        └─────────────────────────────┘
        
        📊 대화형 차트와 분석을 위해서는
        위의 링크들을 직접 확인하세요!
        
        📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
        
        ✅ 대체 링크 제공 완료"
        
        echo "✅ 대체 링크 방법 완료"
