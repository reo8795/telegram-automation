name: Daily Stock Alerts

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'    # 매일 한국시간 07:00 (UTC 22:00)
    - cron: '30 8 * * *'    # 매일 한국시간 17:30 (UTC 08:30)

jobs:
  morning-fear-greed:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 22 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Send Fear Greed Index
      run: |
        echo "공포탐욕지수 전송 시작"
        
        # CNN API에서 데이터 가져오기
        cnn_data=$(curl -s "https://production.dataviz.cnn.io/index/fearandgreed/graphdata")
        
        if [ ! -z "$cnn_data" ] && echo "$cnn_data" | grep -q "fear_and_greed"; then
          fear_greed_score=$(echo "$cnn_data" | grep -o '"score":[0-9]*' | head -1 | cut -d':' -f2)
          fear_greed_rating=$(echo "$cnn_data" | grep -o '"rating":"[^"]*' | head -1 | cut -d'"' -f4)
          
          case "$fear_greed_rating" in
            "Extreme Fear") korean_rating="극도의 공포" ;;
            "Fear") korean_rating="공포" ;;
            "Neutral") korean_rating="중립" ;;
            "Greed") korean_rating="탐욕" ;;
            "Extreme Greed") korean_rating="극도의 탐욕" ;;
            *) korean_rating="중립" ;;
          esac
        else
          fear_greed_score="50"
          korean_rating="중립"
        fi
        
        if [ "$fear_greed_score" -le 24 ]; then
          emoji="😱"
        elif [ "$fear_greed_score" -le 49 ]; then
          emoji="😰"
        elif [ "$fear_greed_score" -le 74 ]; then
          emoji="🤑"
        else
          emoji="🤯"
        fi
        
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=${emoji} 오늘의 미국 주식 공포탐욕지수

        📊 현재 지수: ${fear_greed_score}/100 (${korean_rating})

        💡 간단 가이드:
        😱 0-24: 극도의 공포 (매수 기회)
        😰 25-49: 공포 (신중한 매수)
        🤑 50-74: 탐욕 (신중한 매도)  
        🤯 75-100: 극도의 탐욕 (매도 고려)

        🔗 상세 차트: https://www.cnn.com/markets/fear-and-greed

        📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')"

  evening-technical-analysis:
    runs-on: ubuntu-latest
    if: github.event.schedule == '30 8 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Send Technical Analysis Summary
      run: |
        echo "기술적 분석 요약 전송 시작"
        
        # 현재 시간
        current_time=$(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
        
        # 기술적 분석 요약 메시지
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📈 오늘의 주요 종목 기술적 분석

        🔍 지지/저항 및 과매도/과매수 분석:

        🌐 CRCL (써클 인터넷): 
        • 지지: 실시간 차트 확인 필요
        • 저항: TradingView에서 확인
        • RSI: 과매도/과매수 상태 체크

        🏥 OSCR (오스카 헬스):
        • 지지/저항: 차트 패턴 분석 필요
        • 볼린저 밴드: 변동성 확인

        ⚛️ ARQQ (아킷 퀀텀):
        • 기술적 지표: 소량 거래로 신중 접근

        ₿ BTM (비트코인 디포):
        • 비트코인 연동성: BTC 차트 함께 분석

        🌐 CRWV (코어위브):
        • 클라우드 섹터 모멘텀 확인

        🇰🇷 NAVER (035420):
        • 한국 시장 지지/저항선 분석

        🌌 GLXY (갤럭시 디지털):
        • 암호화폐 시장 연동성 체크

        🔬 NBIS (네비우스 그룹):
        • 바이오 섹터 기술적 분석

        🚗 TSLA (테슬라):
        • 주요 지지선: $200, $180
        • 저항선: $250, $280
        • RSI/MACD 모멘텀 확인

        ⚛️ OKLO (오클로):
        • 에너지 섹터 기술적 패턴

        💎 MRVL (마벨):
        • 반도체 섹터 지지/저항
        • AI 관련주 모멘텀

        🔍 PLTR (팔란티어):
        • 소프트웨어주 기술적 분석
        • 정부 계약 뉴스 임팩트

        📡 AEVA (에바):
        • 자율주행 섹터 변동성 체크

        🔗 상세 기술적 분석:
        📊 TradingView: https://www.tradingview.com
        📈 야후 파이낸스: https://finance.yahoo.com

        📅 ${current_time}
        
        💡 참고: 실제 투자 결정은 개별 차트 분석 후 신중하게 하세요."

        sleep 3

        # 추가 시장 요약
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📊 시장 기술적 분석 체크리스트

        ✅ 오늘 확인할 기술적 지표:

        📈 주요 지지/저항선:
        • S&P 500: 주요 이동평균선
        • NASDAQ: 기술주 모멘텀
        • 개별 종목: 피보나치 되돌림

        📉 과매도/과매수 확인:
        • RSI (14일): 30 이하(과매도), 70 이상(과매수)
        • 스토캐스틱: %K, %D 라인 교차점
        • MACD: 시그널 라인 돌파 여부

        🔄 볼륨 분석:
        • 거래량 증가 패턴
        • 가격 상승 시 볼륨 확인
        • 돌파 구간 거래량 체크

        💡 오늘의 핵심:
        각 종목별 차트를 직접 확인하여
        개인적인 진입/청산 시점을 
        기술적 분석으로 판단하세요!

        📅 ${current_time}"
