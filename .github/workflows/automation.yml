name: Simple Link Only System

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'      # 매일 07:00 KST (공포탐욕지수 링크)
    - cron: '0 */3 * * *'     # 3시간마다 (종목 뉴스)

jobs:
  # 매일 아침 7시 - 공포탐욕지수 링크만
  morning-fear-greed-link:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 22 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Send CNN Fear Greed Link Only
      run: |
        echo "공포탐욕지수 링크 전송"
        
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📊 오늘의 미국 주식 공포탐욕지수

        🔗 CNN 공포탐욕지수 확인:
        https://www.cnn.com/markets/fear-and-greed

        💡 간단 가이드:
        😱 0-24: 극도의 공포 (매수 기회)
        😰 25-49: 공포 (신중한 매수)
        🤑 50-74: 탐욕 (신중한 매도)
        🤯 75-100: 극도의 탐욕 (매도 고려)

        📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 07:00 KST')

        ✅ 위 링크에서 정확한 지수와 차트를 확인하세요"

  # 3시간마다 - 종목 뉴스 (기존과 동일)
  korean-translated-news:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 */3 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Get News and Translate to Korean
      run: |
        echo "종목 뉴스 확인 및 한국어 번역 시작"
        
        # 종목 리스트
        declare -A stocks=(
          ["CRCL"]="Circle Internet Group"
          ["OSCR"]="Oscar Health"
          ["ARQQ"]="Arqit Quantum"
          ["BTM"]="Bitcoin Depot"
          ["CRWV"]="CoreWeave"
          ["GLXY"]="Galaxy Digital"
          ["NBIS"]="Nebius Group"
          ["TSLA"]="Tesla"
          ["OKLO"]="Oklo"
          ["MRVL"]="Marvell Technology"
          ["PLTR"]="Palantir"
          ["AEVA"]="Aeva Technologies"
        )
        
        # 한국어 번역 함수
        translate_to_korean() {
          local english_text="$1"
          korean_text="$english_text"
          
          # 기본 주식 용어
          korean_text=$(echo "$korean_text" | sed 's/\bstock\b/주식/g')
          korean_text=$(echo "$korean_text" | sed 's/\bshares\b/주식/g')
          korean_text=$(echo "$korean_text" | sed 's/\bearnings\b/실적/g')
          korean_text=$(echo "$korean_text" | sed 's/\brevenue\b/매출/g')
          korean_text=$(echo "$korean_text" | sed 's/\bprofit\b/이익/g')
          korean_text=$(echo "$korean_text" | sed 's/\bgains\b/상승/g')
          korean_text=$(echo "$korean_text" | sed 's/\bfalls\b/하락/g')
          korean_text=$(echo "$korean_text" | sed 's/\brises\b/상승/g')
          korean_text=$(echo "$korean_text" | sed 's/\bdrops\b/하락/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsurges\b/급등/g')
          korean_text=$(echo "$korean_text" | sed 's/\bplunges\b/급락/g')
          korean_text=$(echo "$korean_text" | sed 's/\binvestment\b/투자/g')
          korean_text=$(echo "$korean_text" | sed 's/\bmarket\b/시장/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcompany\b/회사/g')
          korean_text=$(echo "$korean_text" | sed 's/\bquarter\b/분기/g')
          korean_text=$(echo "$korean_text" | sed 's/\banalyst\b/애널리스트/g')
          korean_text=$(echo "$korean_text" | sed 's/\btarget\b/목표가/g')
          korean_text=$(echo "$korean_text" | sed 's/\bupgrade\b/상향조정/g')
          korean_text=$(echo "$korean_text" | sed 's/\bdowngrade\b/하향조정/g')
          korean_text=$(echo "$korean_text" | sed 's/\bbuy\b/매수/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsell\b/매도/g')
          korean_text=$(echo "$korean_text" | sed 's/\bhold\b/보유/g')
          
          # 회사/기술 용어
          korean_text=$(echo "$korean_text" | sed 's/\bTesla\b/테슬라/g')
          korean_text=$(echo "$korean_text" | sed 's/\bPalantir\b/팔란티어/g')
          korean_text=$(echo "$korean_text" | sed 's/\bMarvell\b/마벨/g')
          korean_text=$(echo "$korean_text" | sed 's/\belectric vehicle\b/전기차/g')
          korean_text=$(echo "$korean_text" | sed 's/\bEV\b/전기차/g')
          korean_text=$(echo "$korean_text" | sed 's/\bautonomous\b/자율주행/g')
          korean_text=$(echo "$korean_text" | sed 's/\bAI\b/AI/g')
          korean_text=$(echo "$korean_text" | sed 's/\bartificial intelligence\b/인공지능/g')
          korean_text=$(echo "$korean_text" | sed 's/\bbitcoin\b/비트코인/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcryptocurrency\b/암호화폐/g')
          korean_text=$(echo "$korean_text" | sed 's/\bblockchain\b/블록체인/g')
          korean_text=$(echo "$korean_text" | sed 's/\bquantum\b/양자/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcloud\b/클라우드/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsemiconductor\b/반도체/g')
          korean_text=$(echo "$korean_text" | sed 's/\bchip\b/칩/g')
          
          echo "$korean_text"
        }
        
        # 네이버 뉴스 확인
        naver_news=$(curl -s "https://news.google.com/rss/search?q=NAVER+Korea+stock+네이버" 2>/dev/null || echo "")
        if [ ! -z "$naver_news" ]; then
          naver_title=$(echo "$naver_news" | grep -o '<title><!\[CDATA\[.*\]\]></title>' | head -2 | tail -1 | sed 's/<title><!\[CDATA\[//g' | sed 's/\]\]><\/title>//g')
          
          if [ ! -z "$naver_title" ] && [ "$naver_title" != "" ] && [ "$naver_title" != "Google News" ]; then
            if echo "$naver_title" | grep -q '[가-힣]'; then
              translated_title="$naver_title"
            else
              translated_title=$(translate_to_korean "$naver_title")
            fi
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.CHAT_ID }}" \
              -d "text=🇰🇷 NAVER (035420) 최신 뉴스

            📰 ${translated_title}

            🔗 뉴스 링크: https://news.google.com/search?q=NAVER+Korea
            📊 주가 확인: https://finance.yahoo.com/quote/035420.KS

            📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')"
          fi
        fi
        
        # 미국 종목들 뉴스 확인
        for symbol in "${!stocks[@]}"; do
          company_name="${stocks[$symbol]}"
          echo "뉴스 확인: $symbol ($company_name)"
          
          news_data=$(curl -s "https://news.google.com/rss/search?q=${symbol}+${company_name// /+}+stock" 2>/dev/null || echo "")
          
          if [ ! -z "$news_data" ]; then
            english_title=$(echo "$news_data" | grep -o '<title><!\[CDATA\[.*\]\]></title>' | head -2 | tail -1 | sed 's/<title><!\[CDATA\[//g' | sed 's/\]\]><\/title>//g')
            
            if [ ! -z "$english_title" ] && [ "$english_title" != "" ] && [ "$english_title" != "Google News" ]; then
              korean_title=$(translate_to_korean "$english_title")
              news_link="https://news.google.com/search?q=${symbol}+stock"
              
              case "$symbol" in
                "TSLA") emoji="🚗" ;;
                "PLTR") emoji="🔍" ;;
                "MRVL") emoji="💎" ;;
                "BTM") emoji="₿" ;;
                "GLXY") emoji="🌌" ;;
                "OSCR") emoji="🏥" ;;
                "OKLO") emoji="⚛️" ;;
                "AEVA") emoji="📡" ;;
                "NBIS") emoji="🔬" ;;
                "ARQQ") emoji="⚛️" ;;
                "CRCL") emoji="🌐" ;;
                "CRWV") emoji="☁️" ;;
                *) emoji="📈" ;;
              esac
              
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
                -d "chat_id=${{ secrets.CHAT_ID }}" \
                -d "text=${emoji} ${symbol} (${company_name}) 최신 뉴스

              📰 ${korean_title}

              🔗 뉴스 링크: ${news_link}
              📊 주가 확인: https://finance.yahoo.com/quote/${symbol}

              📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')"
              
              sleep 3
            fi
          fi
          
          sleep 1
        done
        
        echo "모든 뉴스 확인 완료"
