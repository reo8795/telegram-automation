name: Stock News Korean Translation System

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'      # 매일 07:00 KST (공포탐욕지수)
    - cron: '0 */3 * * *'     # 3시간마다 (종목 뉴스)

jobs:
  # 매일 아침 7시 - 미국 주식 공포탐욕지수만
  morning-us-fear-greed:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 22 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Send US Stock Fear Greed Index Only
      run: |
        echo "미국 주식 공포탐욕지수 전송 시작"
        
        # CNN 미국 주식 공포탐욕지수만 시도 (암호화폐 제외)
        us_stock_image_urls=(
          "https://production.dataviz.cnn.io/index/fearandgreed/chart"
          "https://en.macromicro.me/charts/50108/cnn-fear-and-greed.png"
        )
        
        success=false
        
        for url in "${us_stock_image_urls[@]}"; do
          echo "미국 주식 공포탐욕지수 이미지 시도: $url"
          
          response=$(curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendPhoto" \
            -F "chat_id=${{ secrets.CHAT_ID }}" \
            -F "photo=$url" \
            -F "caption=📊 CNN 미국 주식시장 공포탐욕지수

          💡 투자 가이드:
          😱 0-24: 극도의 공포 (매수 기회)
          😰 25-49: 공포 (신중한 매수)
          🤑 50-74: 탐욕 (신중한 매도)
          🤯 75-100: 극도의 탐욕 (매도 고려)
          
          📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 07:00 KST')
          
          🔗 실시간 확인: https://www.cnn.com/markets/fear-and-greed")
          
          if echo "$response" | grep -q '"ok":true'; then
            echo "✅ 미국 주식 공포탐욕지수 이미지 전송 성공"
            success=true
            break
          else
            echo "❌ 이미지 전송 실패: $url"
          fi
        done
        
        # 이미지 실패 시 텍스트로 전송 (미국 주식 전용 안내)
        if [ "$success" = false ]; then
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=📊 CNN 미국 주식시장 공포탐욕지수

          💡 투자 가이드:
          😱 0-24: 극도의 공포 (매수 기회)
          😰 25-49: 공포 (신중한 매수)
          🤑 50-74: 탐욕 (신중한 매도)
          🤯 75-100: 극도의 탐욕 (매도 고려)
          
          📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 07:00 KST')
          
          🔗 실시간 확인: https://www.cnn.com/markets/fear-and-greed
          📊 차트 이미지: https://production.dataviz.cnn.io/index/fearandgreed/chart
          
          ⚠️ 이미지 전송 실패로 링크에서 직접 확인해주세요"
        fi

  # 3시간마다 - 종목 뉴스 한국어 번역
  korean-translated-news:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 */3 * * *' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Get News and Translate to Korean
      run: |
        echo "종목 뉴스 확인 및 한국어 번역 시작"
        
        # 종목 리스트
        declare -A stocks=(
          ["CRCL"]="Circle Internet Group"
          ["OSCR"]="Oscar Health"
          ["ARQQ"]="Arqit Quantum"
          ["BTM"]="Bitcoin Depot"
          ["CRWV"]="CoreWeave"
          ["GLXY"]="Galaxy Digital"
          ["NBIS"]="Nebius Group"
          ["TSLA"]="Tesla"
          ["OKLO"]="Oklo"
          ["MRVL"]="Marvell Technology"
          ["PLTR"]="Palantir"
          ["AEVA"]="Aeva Technologies"
        )
        
        # 간단한 영어-한국어 번역 함수
        translate_to_korean() {
          local english_text="$1"
          
          # 기본적인 단어 번역 (패턴 매칭)
          korean_text="$english_text"
          
          # 일반적인 주식 용어 번역
          korean_text=$(echo "$korean_text" | sed 's/\bstock\b/주식/g')
          korean_text=$(echo "$korean_text" | sed 's/\bshares\b/주식/g')
          korean_text=$(echo "$korean_text" | sed 's/\bearnings\b/실적/g')
          korean_text=$(echo "$korean_text" | sed 's/\brevenue\b/매출/g')
          korean_text=$(echo "$korean_text" | sed 's/\bprofit\b/이익/g')
          korean_text=$(echo "$korean_text" | sed 's/\bgains\b/상승/g')
          korean_text=$(echo "$korean_text" | sed 's/\bfalls\b/하락/g')
          korean_text=$(echo "$korean_text" | sed 's/\brises\b/상승/g')
          korean_text=$(echo "$korean_text" | sed 's/\bdrops\b/하락/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsurges\b/급등/g')
          korean_text=$(echo "$korean_text" | sed 's/\bplunges\b/급락/g')
          korean_text=$(echo "$korean_text" | sed 's/\binvestment\b/투자/g')
          korean_text=$(echo "$korean_text" | sed 's/\bmarket\b/시장/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcompany\b/회사/g')
          korean_text=$(echo "$korean_text" | sed 's/\bquarter\b/분기/g')
          korean_text=$(echo "$korean_text" | sed 's/\banalyst\b/애널리스트/g')
          korean_text=$(echo "$korean_text" | sed 's/\btarget\b/목표가/g')
          korean_text=$(echo "$korean_text" | sed 's/\bupgrade\b/상향조정/g')
          korean_text=$(echo "$korean_text" | sed 's/\bdowngrade\b/하향조정/g')
          korean_text=$(echo "$korean_text" | sed 's/\bbuy\b/매수/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsell\b/매도/g')
          korean_text=$(echo "$korean_text" | sed 's/\bhold\b/보유/g')
          
          # 회사별 특수 용어
          korean_text=$(echo "$korean_text" | sed 's/\bTesla\b/테슬라/g')
          korean_text=$(echo "$korean_text" | sed 's/\bPalantir\b/팔란티어/g')
          korean_text=$(echo "$korean_text" | sed 's/\bMarvell\b/마벨/g')
          korean_text=$(echo "$korean_text" | sed 's/\belectric vehicle\b/전기차/g')
          korean_text=$(echo "$korean_text" | sed 's/\bEV\b/전기차/g')
          korean_text=$(echo "$korean_text" | sed 's/\bautonomous\b/자율주행/g')
          korean_text=$(echo "$korean_text" | sed 's/\bAI\b/AI/g')
          korean_text=$(echo "$korean_text" | sed 's/\bartificial intelligence\b/인공지능/g')
          korean_text=$(echo "$korean_text" | sed 's/\bbitcoin\b/비트코인/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcryptocurrency\b/암호화폐/g')
          korean_text=$(echo "$korean_text" | sed 's/\bblockchain\b/블록체인/g')
          korean_text=$(echo "$korean_text" | sed 's/\bquantum\b/양자/g')
          korean_text=$(echo "$korean_text" | sed 's/\bcloud\b/클라우드/g')
          korean_text=$(echo "$korean_text" | sed 's/\bsemiconductor\b/반도체/g')
          korean_text=$(echo "$korean_text" | sed 's/\bchip\b/칩/g')
          
          echo "$korean_text"
        }
        
        # 네이버 뉴스 확인 (한국 종목)
        naver_news=$(curl -s "https://news.google.com/rss/search?q=NAVER+Korea+stock+네이버+주식" | head -20)
        naver_title=$(echo "$naver_news" | grep -o '<title><!\[CDATA\[.*\]\]></title>' | head -2 | tail -1 | sed 's/<title><!\[CDATA\[//g' | sed 's/\]\]><\/title>//g')
        
        if [ ! -z "$naver_title" ] && [ "$naver_title" != "" ] && [ "$naver_title" != "Google News" ]; then
          # 네이버 뉴스는 한국어면 그대로, 영어면 번역
          if echo "$naver_title" | grep -q '[가-힣]'; then
            translated_title="$naver_title"
          else
            translated_title=$(translate_to_korean "$naver_title")
          fi
          
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.CHAT_ID }}" \
            -d "text=🇰🇷 NAVER (035420) 최신 뉴스

          📰 ${translated_title}

          🔗 뉴스 링크: https://news.google.com/search?q=NAVER+Korea
          📊 주가 확인: https://finance.yahoo.com/quote/035420.KS

          📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')"
        fi
        
        # 미국 종목들 뉴스 확인 및 번역
        for symbol in "${!stocks[@]}"; do
          company_name="${stocks[$symbol]}"
          echo "뉴스 확인 및 번역 중: $symbol ($company_name)"
          
          # Google News에서 영어 뉴스 검색
          news_data=$(curl -s "https://news.google.com/rss/search?q=${symbol}+${company_name// /+}+stock+news" | head -20)
          
          # 최신 뉴스 제목 추출
          english_title=$(echo "$news_data" | grep -o '<title><!\[CDATA\[.*\]\]></title>' | head -2 | tail -1 | sed 's/<title><!\[CDATA\[//g' | sed 's/\]\]><\/title>//g')
          
          if [ ! -z "$english_title" ] && [ "$english_title" != "" ] && [ "$english_title" != "Google News" ]; then
            echo "영어 뉴스 발견: $symbol - $english_title"
            
            # 한국어로 번역
            korean_title=$(translate_to_korean "$english_title")
            
            # 해당 뉴스 직접 링크 (Google 검색 결과)
            news_link="https://news.google.com/search?q=${symbol}+${company_name// /+}+stock"
            
            # 종목별 이모지
            case "$symbol" in
              "TSLA") emoji="🚗" ;;
              "PLTR") emoji="🔍" ;;
              "MRVL") emoji="💎" ;;
              "BTM") emoji="₿" ;;
              "GLXY") emoji="🌌" ;;
              "OSCR") emoji="🏥" ;;
              "OKLO") emoji="⚛️" ;;
              "AEVA") emoji="📡" ;;
              "NBIS") emoji="🔬" ;;
              "ARQQ") emoji="⚛️" ;;
              "CRCL") emoji="🌐" ;;
              "CRWV") emoji="☁️" ;;
              *) emoji="📈" ;;
            esac
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.CHAT_ID }}" \
              -d "text=${emoji} ${symbol} (${company_name}) 최신 뉴스

            📰 ${korean_title}

            🔗 뉴스 링크: ${news_link}
            📊 주가 확인: https://finance.yahoo.com/quote/${symbol}

            📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')"
            
            sleep 3
          else
            echo "새로운 뉴스 없음: $symbol"
          fi
          
          sleep 1
        done
        
        echo "모든 종목 뉴스 확인 및 번역 완료"

    - name: Send Translation Summary
      run: |
        sleep 5
        
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=📊 종목 뉴스 모니터링 완료

        ✅ 확인 완료된 종목들:
        🌐 CRCL, 🏥 OSCR, ⚛️ ARQQ, ₿ BTM
        ☁️ CRWV, 🇰🇷 NAVER, 🌌 GLXY, 🔬 NBIS
        🚗 TSLA, ⚛️ OKLO, 💎 MRVL, 🔍 PLTR, 📡 AEVA

        📅 $(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H:%M KST')
        ⏰ 다음 확인: 3시간 후

        💡 새로운 뉴스가 있을 때만 한국어 번역과 함께 알림"
